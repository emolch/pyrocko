kind: pipeline
type: docker
name: flake8

steps:
- name: flake8
  image: pyrocko-nest
  pull: never
  commands:
  - flake8 src test examples setup.py

---

kind: pipeline
type: docker
name: docs

steps:
- name: build
  image: pyrocko-docs
  pull: never
  commands:
  - pip3 install --no-deps --no-build-isolation --force-reinstall . && cd doc && make html
  - python3 -m pyrocko.print_version short > build/html/version.txt

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh doc/build/html/ ${DRONE_COMMIT}/docs/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

- name: stage-www
  image: pyrocko-util
  pull: never

  when:
    branch:
    - release
    - deploy-docs

  commands:
  - maintenance/drone-rsync.sh doc/build/html/ ${DRONE_COMMIT}/docs/
  environment:
    RSYNC_HOST:
      from_secret: www-host
    RSYNC_USER:
      from_secret: www-user
    RSYNC_KEY:
      from_secret: rsync-key

- name: deploy-www
  image: pyrocko-util
  pull: never

  when:
    branch:
    - release
    - deploy-docs

  commands:
  - maintenance/drone-deploy-docs.sh
  environment:
    WWW_HOST:
      from_secret: www-host
    WWW_USER:
      from_secret: www-user
    WWW_KEY:
      from_secret: www-key

---

kind: pipeline
type: docker
name: pip-sdist

trigger:
  branch:
  - release
  - candidate
  - pip
  - deploy-pip

steps:

- name: build
  image: pyrocko-nest
  pull: never
  commands:
  - python3 setup.py sdist

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh dist/ ${DRONE_COMMIT}/dist/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

- name: upload-testing
  image: pyrocko-nest
  pull: never
  when:
    branch:
    - candidate
    - pip
  commands:
  - bash maintenance/pip/upload_wheels.sh testing
  environment:
    PYPI_USERNAME:
      from_secret: pypi-username
    PYPI_PASSWORD:
      from_secret: pypi-password

- name: upload
  image: pyrocko-nest
  pull: never
  when:
    branch:
    - release
    - deploy-pip
  commands:
  - bash maintenance/pip/upload_wheels.sh live
  environment:
    PYPI_USERNAME:
      from_secret: pypi-username
    PYPI_PASSWORD:
      from_secret: pypi-password

---

kind: pipeline
type: docker
name: pip-manylinux2014

trigger:
  branch:
  - release
  - candidate
  - pip
  - deploy-pip

steps:
- name: build
  image: quay.io/pypa/manylinux2014_x86_64
  commands:
  - maintenance/pip/build_wheels.sh
  environment:
    PLAT: manylinux2014_x86_64

- name: test-pure
  image: pyrocko-util
  pull: never
  when:
    branch:
      exclude:
      - release
      - deploy-pip
  commands:
  - pip3 install -f dist pyrocko --no-index --no-deps
  - pip3 install -f dist pyrocko
  - pip3 install --only-binary=PyQt5 PyQt5 jinja2 pytest
  - xvfb-run -s '-screen 0 640x480x24' python3 -m pytest

- name: test-mixed
  image: pyrocko-fat-nest
  pull: never
  when:
    branch:
      exclude:
      - release
      - deploy-pip
  commands:
  - ln -sf /pyrocko-test-data test/data
  - pip3 install -f dist --no-index --no-deps pyrocko
  - xvfb-run -s '-screen 0 640x480x24' python3 -m pytest

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh dist/ ${DRONE_COMMIT}/wheels/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

- name: upload-testing
  image: pyrocko-nest
  pull: never
  when:
    branch:
    - candidate
    - pip
  commands:
  - bash maintenance/pip/upload_wheels.sh testing
  environment:
    PYPI_USERNAME:
      from_secret: pypi-username
    PYPI_PASSWORD:
      from_secret: pypi-password

- name: upload
  image: pyrocko-nest
  pull: never
  when:
    branch:
    - release
    - deploy-pip
  commands:
  - bash maintenance/pip/upload_wheels.sh live
  environment:
    PYPI_USERNAME:
      from_secret: pypi-username
    PYPI_PASSWORD:
      from_secret: pypi-password

---

kind: pipeline
type: docker
name: tests-base

trigger:
  branch:
    exclude:
    - conda
    - pip
    - release
    - deploy-docs
    - deploy-pip

steps:

- name: tests-base
  image: pyrocko-fat-nest
  pull: never
  commands:
  - ln -sf /pyrocko-test-data test/data
  - pip3 install --no-deps --no-build-isolation --force-reinstall .
  - python3 -m coverage run --parallel-mode -m pytest test/base
  - for x in .coverage.* ; do mv $x $${x#.} ; done

- name: tests-base-hptime
  image: pyrocko-fat-nest
  pull: never
  commands:
  - ln -sf /pyrocko-test-data test/data
  - pip3 install --no-deps --no-build-isolation --force-reinstall .
  - python3 -m coverage run --parallel-mode -m pytest test/base
  - for x in .coverage.* ; do mv $x $${x#.} ; done
  environment:
    PYROCKO_USE_HIGH_PRECISION_TIME: 1
  when:
    branch:
    - hptime
    - candidate

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh coverage.*  ${DRONE_COMMIT}/coverage/data/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key


---

kind: pipeline
type: docker
name: tests-gf

trigger:
  branch:
    exclude:
    - conda
    - pip
    - release
    - deploy-docs
    - deploy-pip


steps:
- name: tests-gf
  image: pyrocko-fat-nest
  pull: never
  commands:
  - ln -sf /pyrocko-test-data test/data
  - pip3 install --no-deps --no-build-isolation --force-reinstall .
  - python3 -m coverage run --parallel-mode -m pytest test/gf
  - for x in .coverage.* ; do mv $x $${x#.} ; done

- name: tests-gf-hptime
  image: pyrocko-fat-nest
  pull: never
  commands:
  - ln -sf /pyrocko-test-data test/data
  - pip3 install --no-deps --no-build-isolation --force-reinstall .
  - python3 -m coverage run --parallel-mode -m pytest test/gf
  - for x in .coverage.* ; do mv $x $${x#.} ; done
  environment:
    PYROCKO_USE_HIGH_PRECISION_TIME: 1
  when:
    branch:
    - hptime
    - candidate

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh coverage.*  ${DRONE_COMMIT}/coverage/data/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

---

kind: pipeline
type: docker
name: tests-examples

trigger:
  branch:
    exclude:
    - conda
    - pip
    - release
    - deploy-docs
    - deploy-pip

steps:
- name: tests-examples
  image: pyrocko-fat-nest
  pull: never
  commands:
  - ln -sf /pyrocko-test-data test/data
  - pip3 install --no-deps --no-build-isolation --force-reinstall .
  - python3 -m coverage run --parallel-mode -m pytest test/examples
  - for x in .coverage.* ; do mv $x $${x#.} ; done

- name: tests-examples-hptime
  image: pyrocko-fat-nest
  pull: never
  commands:
  - ln -sf /pyrocko-test-data test/data
  - pip3 install --no-deps --no-build-isolation --force-reinstall .
  - python3 -m coverage run --parallel-mode -m pytest test/examples
  - for x in .coverage.* ; do mv $x $${x#.} ; done
  environment:
    PYROCKO_USE_HIGH_PRECISION_TIME: 1
  when:
    branch:
    - hptime
    - candidate

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh coverage.*  ${DRONE_COMMIT}/coverage/data/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

---

kind: pipeline
type: docker
name: tests-gui

trigger:
  branch:
    exclude:
    - conda
    - pip
    - release
    - deploy-docs
    - deploy-pip

steps:
- name: tests-gui
  image: pyrocko-fat-nest
  pull: never
  commands:
  - ln -sf /pyrocko-test-data test/data
  - pip3 install --no-deps --no-build-isolation --force-reinstall .
  - xvfb-run -s '-screen 0 640x480x24' python3 -m coverage run --parallel-mode -m pytest test/gui test/base/test_obspy_compat.py::ObsPyCompatTestCase::test_obspy_fiddle test/base/test_obspy_compat.py::ObsPyCompatTestCase::test_obspy_snuffle
  - for x in .coverage.* ; do mv $x $${x#.} ; done

- name: tests-gui-hptime
  image: pyrocko-fat-nest
  pull: never
  commands:
  - ln -sf /pyrocko-test-data test/data
  - pip3 install --no-deps --no-build-isolation --force-reinstall .
  - xvfb-run -s '-screen 0 640x480x24' python3 -m coverage run --parallel-mode -m pytest test/gui test/base/test_obspy_compat.py::ObsPyCompatTestCase::test_obspy_fiddle test/base/test_obspy_compat.py::ObsPyCompatTestCase::test_obspy_snuffle
  - for x in .coverage.* ; do mv $x $${x#.} ; done
  environment:
    PYROCKO_USE_HIGH_PRECISION_TIME: 1
  when:
    branch:
    - hptime
    - candidate

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh coverage.*  ${DRONE_COMMIT}/coverage/data/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

---

kind: pipeline
type: exec
name: tests-windows

trigger:
  branch:
    exclude:
    - conda
    - pip
    - release
    - deploy-docs
    - deploy-pip

platform:
  os: windows

steps:
- name: install
  commands:
  - C:\Windows\System32\cleanmgr.exe /dC
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\Lib\\site-packages\\pyrocko
  - pip install --no-deps --no-build-isolation --force-reinstall .
  - xcopy C:\\vagrant\\test-data test\\data\\ /E /Y

- name: tests-base
  commands:
  - pytest -v test/base
  depends_on:
  - install

- name: tests-gf
  commands:
  - pytest -v test/gf
  depends_on:
  - install

- name: tests-examples
  commands:
  - pytest -v test/examples
  depends_on:
  - install

- name: tests-gui
  commands:
  - pytest -v test/gui
  depends_on:
  - install

- name: finalize
  commands: []
  depends_on:
  - tests-base
  - tests-gf
  - tests-examples
  - tests-gui

---

kind: pipeline
type: exec
name: pip-windows

trigger:
  branch:
  - release
  - candidate
  - pip
  - deploy-pip
  - pip-windows-release

platform:
  os: windows

steps:
- name: build
  commands:
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\Lib\\site-packages\\pyrocko
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py36
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py37
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py38
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py39

  - conda create -y -n py37 python=3.7 m2-tar m2-gzip m2-patch setuptools pip numpy=1.14
  - conda run -n py37 python -m pip wheel -v -w dist "--only-binary=:all:" .

  - conda create -y -n py38 python=3.8 m2-tar m2-gzip m2-patch setuptools pip numpy=1.14
  - conda run -n py38 python -m pip wheel -v -w dist "--only-binary=:all:" .

  - conda create -y -n py39 python=3.9 m2-tar m2-gzip m2-patch setuptools pip numpy=1.16
  - conda run -n py39 python -m pip wheel -v -w dist "--only-binary=:all:" .

  - conda create -y -n py310 python=3.10 m2-tar m2-gzip m2-patch setuptools pip numpy=1.21
  - conda run -n py310 python -m pip wheel -v -w dist "--only-binary=:all:" .

- name: upload-testing
  when:
    branch:
    - candidate
    - pip
  commands:
  - pip install twine
  - bash maintenance/pip/upload_wheels.sh testing
  environment:
    PYPI_USERNAME:
      from_secret: pypi-username
    PYPI_PASSWORD:
      from_secret: pypi-password

- name: upload
  when:
    branch:
    - release
    - pip-windows-release
    - deploy-pip
  commands:
  - pip install twine
  - bash maintenance/pip/upload_wheels.sh live
  environment:
    PYPI_USERNAME:
      from_secret: pypi-username
    PYPI_PASSWORD:
      from_secret: pypi-password

- name: cleanup
  commands:
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\Lib\\site-packages\\pyrocko
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py36
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py37
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py38
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py39

---

kind: pipeline
type: docker
name: coverage

depends_on:
- tests-base
- tests-gf
- tests-examples
- tests-gui

trigger:
  branch:
    exclude:
    - conda
    - pip
    - release
    - deploy-docs
    - deploy-pip

steps:
- name: build
  image: pyrocko-nest
  pull: never
  commands:
  - pip3 install --no-deps --no-build-isolation --force-reinstall .
  - wget -r -nH --cut-dirs=2 --no-parent --reject="index.html*" https://data.pyrocko.org/builds/${DRONE_COMMIT}/coverage/data/
  - python3 -m coverage combine coverage/data/coverage.*
  - python3 -m coverage html

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh htmlcov/ ${DRONE_COMMIT}/coverage/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

---

kind: pipeline
type: exec
name: conda-packages-linux

trigger:
  branch:
    - candidate
    - release
    - conda

platform:
  os: linux
  arch: amd64

steps:
- name: build-test
  commands:
  - ln -sf /data/local/home/pyrocko-testing/.vagrant.d $HOME/.vagrant.d
  - cd maintenance/conda/boxes/centos-7
  - ./outside.sh dryrun
  when:
    branch:
      - candidate
      - conda

- name: build-test-upload
  commands:
  - ln -sf /data/local/home/pyrocko-testing/.vagrant.d $HOME/.vagrant.d
  - cd maintenance/conda/boxes/centos-7
  - ./outside.sh upload
  environment:
    CONDA_USERNAME:
      from_secret: conda-username
    CONDA_PASSWORD:
      from_secret: conda-password
  when:
    branch:
      - release

---

kind: pipeline
type: exec
name: conda-packages-osx

trigger:
  branch:
    - candidate
    - release
    - conda

platform:
  os: linux
  arch: amd64

steps:
- name: build-test
  commands:
  - ln -sf /data/local/home/pyrocko-testing/.vagrant.d $HOME/.vagrant.d
  - cd maintenance/conda/boxes/osx
  - ./outside.sh dryrun
  when:
    branch:
      - candidate
      - conda

- name: build-test-upload
  commands:
  - ln -sf /data/local/home/pyrocko-testing/.vagrant.d $HOME/.vagrant.d
  - cd maintenance/conda/boxes/osx
  - ./outside.sh upload
  environment:
    CONDA_USERNAME:
      from_secret: conda-username
    CONDA_PASSWORD:
      from_secret: conda-password
  when:
    branch:
      - release

---

kind: pipeline
type: exec
name: conda-packages-windows

trigger:
  branch:
    - candidate
    - release
    - conda

platform:
  os: windows

steps:
- name: build-test
  commands:
  - cd maintenance\\conda\\
  - conda run -n base bash build_packages_windows.sh dryrun
  when:
    branch:
      - candidate
      - conda

- name: build-test-upload
  commands:
  - cd maintenance\\conda\\
  - conda run -n base bash build_packages_windows.sh upload
  environment:
    CONDA_USERNAME:
      from_secret: conda-username
    CONDA_PASSWORD:
      from_secret: conda-password
  when:
    branch:
      - release

- name: cleanup
  commands:
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Windows\\Temp\\pyrocko*

---

kind: pipeline
type: docker
name: notify-hive

depends_on:
- coverage
- flake8
- docs
- tests-windows
- pip-sdist
- pip-manylinux2014
- pip-windows
- conda-packages-linux
- conda-packages-osx
- conda-packages-windows

trigger:
  status:
  - success
  - failure

steps:
- name: post
  image: pyrocko-nest
  pull: never
  commands:
  - maintenance/drone-matterpost.py
  environment:
    WEBHOOK:
      from_secret: hive-webhook
